From 531336986340b9a3434d38abaf89feda3530f766 Mon Sep 17 00:00:00 2001
From: Marek Goldmann <mgoldman@redhat.com>
Date: Wed, 4 Apr 2012 15:30:43 +0200
Subject: [PATCH 43/44] Add systemd files, re-arrange directory with init
 scripts

---
 .../resources/bin/init.d/jboss-as-standalone.sh    |  175 -------------------
 build/src/main/resources/bin/init.d/jboss-as.conf  |   22 ---
 .../main/resources/bin/initscripts/jboss-as.conf   |   22 +++
 .../bin/initscripts/systemd/jboss-as.service       |   13 ++
 .../resources/bin/initscripts/systemd/jboss-as.sh  |   88 ++++++++++
 .../resources/bin/initscripts/sysv/jboss-as.sh     |  176 ++++++++++++++++++++
 6 files changed, 299 insertions(+), 197 deletions(-)
 delete mode 100755 build/src/main/resources/bin/init.d/jboss-as-standalone.sh
 delete mode 100644 build/src/main/resources/bin/init.d/jboss-as.conf
 create mode 100644 build/src/main/resources/bin/initscripts/jboss-as.conf
 create mode 100644 build/src/main/resources/bin/initscripts/systemd/jboss-as.service
 create mode 100755 build/src/main/resources/bin/initscripts/systemd/jboss-as.sh
 create mode 100755 build/src/main/resources/bin/initscripts/sysv/jboss-as.sh

diff --git a/build/src/main/resources/bin/init.d/jboss-as-standalone.sh b/build/src/main/resources/bin/init.d/jboss-as-standalone.sh
deleted file mode 100755
index 7b91e90..0000000
--- a/build/src/main/resources/bin/init.d/jboss-as-standalone.sh
+++ /dev/null
@@ -1,175 +0,0 @@
-#!/bin/sh
-#
-# JBoss standalone control script
-#
-# chkconfig: - 80 20
-# description: JBoss AS Standalone
-# processname: standalone
-# pidfile: /var/run/jboss-as/jboss-as-standalone.pid
-# config: /etc/jboss-as/jboss-as.conf
-
-# Source function library.
-. /etc/init.d/functions
-
-# Load Java configuration.
-[ -r /etc/java/java.conf ] && . /etc/java/java.conf
-export JAVA_HOME
-
-# Load JBoss AS init.d configuration.
-if [ -z "$JBOSS_CONF" ]; then
-  JBOSS_CONF="/etc/jboss-as/jboss-as.conf"
-fi
-
-[ -r "$JBOSS_CONF" ] && . "${JBOSS_CONF}"
-
-# Set defaults.
-
-if [ -z "$JBOSS_HOME" ]; then
-  JBOSS_HOME=/usr/share/jboss-as
-fi
-export JBOSS_HOME
-
-if [ -z "$JBOSS_PIDFILE" ]; then
-  JBOSS_PIDFILE=/var/run/jboss-as/jboss-as-standalone.pid
-fi
-export JBOSS_PIDFILE
-
-if [ -z "$JBOSS_CONSOLE_LOG" ]; then
-  JBOSS_CONSOLE_LOG=/var/log/jboss-as/console.log
-fi
-
-if [ -z "$STARTUP_WAIT" ]; then
-  STARTUP_WAIT=30
-fi
-
-if [ -z "$SHUTDOWN_WAIT" ]; then
-  SHUTDOWN_WAIT=30
-fi
-
-if [ -z "$JBOSS_CONFIG" ]; then
-  JBOSS_CONFIG=standalone.xml
-fi
-
-JBOSS_SCRIPT=$JBOSS_HOME/bin/standalone.sh
-
-prog='jboss-as'
-
-CMD_PREFIX=''
-
-if [ ! -z "$JBOSS_USER" ]; then
-  if [ -x /etc/rc.d/init.d/functions ]; then
-    CMD_PREFIX="daemon --user $JBOSS_USER"
-  else
-    CMD_PREFIX="su - $JBOSS_USER -c"
-  fi
-fi
-
-start() {
-  echo -n "Starting $prog: "
-  if [ -f $JBOSS_PIDFILE ]; then
-    read ppid < $JBOSS_PIDFILE
-    if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
-      echo -n "$prog is already running"
-      failure
-      echo
-      return 1 
-    else
-      rm -f $JBOSS_PIDFILE
-    fi
-  fi
-  mkdir -p $(dirname $JBOSS_CONSOLE_LOG)
-  cat /dev/null > $JBOSS_CONSOLE_LOG
-
-  mkdir -p $(dirname $JBOSS_PIDFILE)
-  chown $JBOSS_USER $(dirname $JBOSS_PIDFILE) || true
-  #$CMD_PREFIX JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT 2>&1 > $JBOSS_CONSOLE_LOG &
-  #$CMD_PREFIX JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT &
-
-  if [ ! -z "$JBOSS_USER" ]; then
-    if [ -x /etc/rc.d/init.d/functions ]; then
-      daemon --user $JBOSS_USER LAUNCH_JBOSS_IN_BACKGROUND=1 JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT -c $JBOSS_CONFIG 2>&1 > $JBOSS_CONSOLE_LOG &
-    else
-      su - $JBOSS_USER -c "LAUNCH_JBOSS_IN_BACKGROUND=1 JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT -c $JBOSS_CONFIG" 2>&1 > $JBOSS_CONSOLE_LOG &
-    fi
-  fi
-
-  count=0
-  launched=false
-
-  until [ $count -gt $STARTUP_WAIT ]
-  do
-    grep 'JBoss AS.*started in' $JBOSS_CONSOLE_LOG > /dev/null 
-    if [ $? -eq 0 ] ; then
-      launched=true
-      break
-    fi 
-    sleep 1
-    let count=$count+1;
-  done
-  
-  success
-  echo
-  return 0
-}
-
-stop() {
-  echo -n $"Stopping $prog: "
-  count=0;
-
-  if [ -f $JBOSS_PIDFILE ]; then
-    read kpid < $JBOSS_PIDFILE
-    let kwait=$SHUTDOWN_WAIT
-
-    # Try issuing SIGTERM
-
-    kill -15 $kpid
-    until [ `ps --pid $kpid 2> /dev/null | grep -c $kpid 2> /dev/null` -eq '0' ] || [ $count -gt $kwait ]
-    do
-      sleep 1
-      let count=$count+1;
-    done
-
-    if [ $count -gt $kwait ]; then
-      kill -9 $kpid
-    fi
-  fi
-  rm -f $JBOSS_PIDFILE
-  success
-  echo
-}
-
-status() {
-  if [ -f $JBOSS_PIDFILE ]; then
-    read ppid < $JBOSS_PIDFILE
-    if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
-      echo "$prog is running (pid $ppid)"
-      return 0
-    else
-      echo "$prog dead but pid file exists"
-      return 1
-    fi
-  fi
-  echo "$prog is not running"
-  return 3
-}
-
-case "$1" in
-  start)
-      start
-      ;;
-  stop)
-      stop
-      ;;
-  restart)
-      $0 stop
-      $0 start
-      ;;
-  status)
-      status
-      ;;
-  *)
-      ## If no parameters are given, print which are avaiable.
-      echo "Usage: $0 {start|stop|status|restart|reload}"
-      exit 1
-      ;;
-esac
diff --git a/build/src/main/resources/bin/init.d/jboss-as.conf b/build/src/main/resources/bin/init.d/jboss-as.conf
deleted file mode 100644
index cbe4aa7..0000000
--- a/build/src/main/resources/bin/init.d/jboss-as.conf
+++ /dev/null
@@ -1,22 +0,0 @@
-# General configuration for the init.d scripts,
-# not necessarily for JBoss AS itself.
-
-# The username who should own the process.
-#
-JBOSS_USER=jboss-as
-
-# The amount of time to wait for startup
-#
-# STARTUP_WAIT=30
-
-# The amount of time to wait for shutdown
-#
-# SHUTDOWN_WAIT=30
-
-# Location to keep the console log
-#
-# JBOSS_CONSOLE_LOG=/var/log/jboss-as/console.log
-
-# The configuration you want to run
-#
-JBOSS_CONFIG=standalone-web.xml
diff --git a/build/src/main/resources/bin/initscripts/jboss-as.conf b/build/src/main/resources/bin/initscripts/jboss-as.conf
new file mode 100644
index 0000000..cbe4aa7
--- /dev/null
+++ b/build/src/main/resources/bin/initscripts/jboss-as.conf
@@ -0,0 +1,22 @@
+# General configuration for the init.d scripts,
+# not necessarily for JBoss AS itself.
+
+# The username who should own the process.
+#
+JBOSS_USER=jboss-as
+
+# The amount of time to wait for startup
+#
+# STARTUP_WAIT=30
+
+# The amount of time to wait for shutdown
+#
+# SHUTDOWN_WAIT=30
+
+# Location to keep the console log
+#
+# JBOSS_CONSOLE_LOG=/var/log/jboss-as/console.log
+
+# The configuration you want to run
+#
+JBOSS_CONFIG=standalone-web.xml
diff --git a/build/src/main/resources/bin/initscripts/systemd/jboss-as.service b/build/src/main/resources/bin/initscripts/systemd/jboss-as.service
new file mode 100644
index 0000000..5bbc880
--- /dev/null
+++ b/build/src/main/resources/bin/initscripts/systemd/jboss-as.service
@@ -0,0 +1,13 @@
+[Unit]
+Description=The JBoss Application Server
+After=network.target remote-fs.target nss-lookup.target
+
+[Service]
+Type=forking
+EnvironmentFile=-/etc/sysconfig/jboss-as
+ExecStart=/usr/share/jboss-as/bin/jboss-as-standalone.sh $OPTIONS start
+ExecStop=/usr/share/jboss-as/bin/jboss-as-standalone.sh stop
+PrivateTmp=true
+
+[Install]
+WantedBy=multi-user.target
diff --git a/build/src/main/resources/bin/initscripts/systemd/jboss-as.sh b/build/src/main/resources/bin/initscripts/systemd/jboss-as.sh
new file mode 100755
index 0000000..da57af6
--- /dev/null
+++ b/build/src/main/resources/bin/initscripts/systemd/jboss-as.sh
@@ -0,0 +1,88 @@
+#!/bin/sh
+
+# Load Java configuration.
+[ -r /etc/java/java.conf ] && . /etc/java/java.conf
+
+export JAVA_HOME
+
+# Load JBoss AS configuration.
+if [ -z "$JBOSS_CONF" ]; then
+  JBOSS_CONF="/etc/sysconfig/jboss-as"
+fi
+
+[ -r "$JBOSS_CONF" ] && . "${JBOSS_CONF}"
+
+if [ -z "$JBOSS_HOME" ]; then
+  JBOSS_HOME=/usr/share/jboss-as
+fi
+
+export JBOSS_HOME
+
+if [ -z "$JBOSS_PIDFILE" ]; then
+  JBOSS_PIDFILE=/var/run/jboss-as/jboss-as.pid
+fi
+
+if [ -z "$JBOSS_CONSOLE_LOG" ]; then
+  JBOSS_CONSOLE_LOG=/var/log/jboss-as/console.log
+fi
+
+if [ -z "$JBOSS_CONFIG" ]; then
+  JBOSS_CONFIG=standalone.xml
+fi
+
+if [ -z "$JBOSS_SCRIPT" ]; then
+  JBOSS_SCRIPT=$JBOSS_HOME/bin/standalone.sh
+fi
+
+# For SELinux we need to use 'runuser' not 'su'
+if [ -x "/sbin/runuser" ]; then
+  SU="/sbin/runuser -s /bin/sh"
+else
+  SU="/bin/su -s /bin/sh"
+fi
+
+start() {
+  if [ -f $JBOSS_PIDFILE ]; then
+    read ppid < $JBOSS_PIDFILE
+    if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
+      failure
+      echo
+      return 1 
+    else
+      rm -f $JBOSS_PIDFILE
+    fi
+  fi
+  mkdir -p $(dirname $JBOSS_CONSOLE_LOG)
+  cat /dev/null > $JBOSS_CONSOLE_LOG
+
+  mkdir -p $(dirname $JBOSS_PIDFILE)
+  chown $JBOSS_USER $(dirname $JBOSS_PIDFILE) || true
+
+  $SU - $JBOSS_USER -c "LAUNCH_JBOSS_IN_BACKGROUND=1 JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT -c $JBOSS_CONFIG" 2>&1 > $JBOSS_CONSOLE_LOG &
+}
+
+stop() {
+  if [ -f $JBOSS_PIDFILE ]; then
+    read kpid < $JBOSS_PIDFILE
+    kill -15 $kpid
+    rm -f $JBOSS_PIDFILE
+  fi
+}
+
+case "$1" in
+  start)
+      start
+      ;;
+  stop)
+      stop
+      ;;
+  restart)
+      $0 stop
+      $0 start
+      ;;
+  *)
+      echo "Usage: $0 {start|stop|restart}"
+      exit 1
+      ;;
+esac
+
diff --git a/build/src/main/resources/bin/initscripts/sysv/jboss-as.sh b/build/src/main/resources/bin/initscripts/sysv/jboss-as.sh
new file mode 100755
index 0000000..7763855
--- /dev/null
+++ b/build/src/main/resources/bin/initscripts/sysv/jboss-as.sh
@@ -0,0 +1,176 @@
+#!/bin/sh
+#
+# JBoss AS control script
+#
+# chkconfig: - 80 20
+# description: JBoss AS Standalone
+# pidfile: /var/run/jboss-as/jboss-as.pid
+# config: /etc/jboss-as/jboss-as.conf
+
+# Source function library.
+. /etc/init.d/functions
+
+# Load Java configuration.
+[ -r /etc/java/java.conf ] && . /etc/java/java.conf
+export JAVA_HOME
+
+# Load JBoss AS init.d configuration.
+if [ -z "$JBOSS_CONF" ]; then
+  JBOSS_CONF="/etc/jboss-as/jboss-as.conf"
+fi
+
+[ -r "$JBOSS_CONF" ] && . "${JBOSS_CONF}"
+
+# Set defaults.
+
+if [ -z "$JBOSS_HOME" ]; then
+  JBOSS_HOME=/usr/share/jboss-as
+fi
+export JBOSS_HOME
+
+if [ -z "$JBOSS_PIDFILE" ]; then
+  JBOSS_PIDFILE=/var/run/jboss-as/jboss-as.pid
+fi
+export JBOSS_PIDFILE
+
+if [ -z "$JBOSS_CONSOLE_LOG" ]; then
+  JBOSS_CONSOLE_LOG=/var/log/jboss-as/console.log
+fi
+
+if [ -z "$STARTUP_WAIT" ]; then
+  STARTUP_WAIT=30
+fi
+
+if [ -z "$SHUTDOWN_WAIT" ]; then
+  SHUTDOWN_WAIT=30
+fi
+
+if [ -z "$JBOSS_CONFIG" ]; then
+  JBOSS_CONFIG=standalone.xml
+fi
+
+if [ -z "$JBOSS_SCRIPT" ]; then
+  JBOSS_SCRIPT=$JBOSS_HOME/bin/standalone.sh
+fi
+
+prog='jboss-as'
+
+CMD_PREFIX=''
+
+if [ ! -z "$JBOSS_USER" ]; then
+  if [ -x /etc/rc.d/init.d/functions ]; then
+    CMD_PREFIX="daemon --user $JBOSS_USER"
+  else
+    CMD_PREFIX="su - $JBOSS_USER -c"
+  fi
+fi
+
+start() {
+  echo -n "Starting $prog: "
+  if [ -f $JBOSS_PIDFILE ]; then
+    read ppid < $JBOSS_PIDFILE
+    if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
+      echo -n "$prog is already running"
+      failure
+      echo
+      return 1 
+    else
+      rm -f $JBOSS_PIDFILE
+    fi
+  fi
+  mkdir -p $(dirname $JBOSS_CONSOLE_LOG)
+  cat /dev/null > $JBOSS_CONSOLE_LOG
+
+  mkdir -p $(dirname $JBOSS_PIDFILE)
+  chown $JBOSS_USER $(dirname $JBOSS_PIDFILE) || true
+  #$CMD_PREFIX JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT 2>&1 > $JBOSS_CONSOLE_LOG &
+  #$CMD_PREFIX JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT &
+
+  if [ ! -z "$JBOSS_USER" ]; then
+    if [ -x /etc/rc.d/init.d/functions ]; then
+      daemon --user $JBOSS_USER LAUNCH_JBOSS_IN_BACKGROUND=1 JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT -c $JBOSS_CONFIG 2>&1 > $JBOSS_CONSOLE_LOG &
+    else
+      su - $JBOSS_USER -c "LAUNCH_JBOSS_IN_BACKGROUND=1 JBOSS_PIDFILE=$JBOSS_PIDFILE $JBOSS_SCRIPT -c $JBOSS_CONFIG" 2>&1 > $JBOSS_CONSOLE_LOG &
+    fi
+  fi
+
+  count=0
+  launched=false
+
+  until [ $count -gt $STARTUP_WAIT ]
+  do
+    grep 'JBoss AS.*started in' $JBOSS_CONSOLE_LOG > /dev/null 
+    if [ $? -eq 0 ] ; then
+      launched=true
+      break
+    fi 
+    sleep 1
+    let count=$count+1;
+  done
+  
+  success
+  echo
+  return 0
+}
+
+stop() {
+  echo -n $"Stopping $prog: "
+  count=0;
+
+  if [ -f $JBOSS_PIDFILE ]; then
+    read kpid < $JBOSS_PIDFILE
+    let kwait=$SHUTDOWN_WAIT
+
+    # Try issuing SIGTERM
+
+    kill -15 $kpid
+    until [ `ps --pid $kpid 2> /dev/null | grep -c $kpid 2> /dev/null` -eq '0' ] || [ $count -gt $kwait ]
+    do
+      sleep 1
+      let count=$count+1;
+    done
+
+    if [ $count -gt $kwait ]; then
+      kill -9 $kpid
+    fi
+  fi
+  rm -f $JBOSS_PIDFILE
+  success
+  echo
+}
+
+status() {
+  if [ -f $JBOSS_PIDFILE ]; then
+    read ppid < $JBOSS_PIDFILE
+    if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
+      echo "$prog is running (pid $ppid)"
+      return 0
+    else
+      echo "$prog dead but pid file exists"
+      return 1
+    fi
+  fi
+  echo "$prog is not running"
+  return 3
+}
+
+case "$1" in
+  start)
+      start
+      ;;
+  stop)
+      stop
+      ;;
+  restart)
+      $0 stop
+      $0 start
+      ;;
+  status)
+      status
+      ;;
+  *)
+      ## If no parameters are given, print which are avaiable.
+      echo "Usage: $0 {start|stop|status|restart|reload}"
+      exit 1
+      ;;
+esac
-- 
1.7.9.3

